/* Reset */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

*,
*:before,
*:after {
  -webkit-box-sizing: border-box;
	 -moz-box-sizing: border-box;
	     box-sizing: border-box;
}

/* Typography */
html {
	font-family: "Verdana";
}

h2 {
	font-size: 3rem;
	margin-bottom: 1em;
}

h3 {
	font-size: 1.5rem;
	margin-bottom: 1em;
}

a {
	text-decoration: none;
}

p {
	font-size: 1.3rem;
	line-height: 1.5em;
}

.clearfix:after {
	content: "";
	display: table;
	clear: both;
}

img {
	object-fit: contain; /* Needed to maintain img aspect ratio in flex box. */
}

/* Custom properties */
:root {
	/* Layout */
	--sidebar-main-gap: 7%;
	--sidebar-width: 20%;
	--main-content-width: 60%;
	/* Main content offset with respect to side bar and main content widths. */
	--main-content-offset-from-left: calc((100% - var(--main-content-width, 40%))/2
										+ (var(--sidebar-width, 350px))/2
										+ (var(--sidebar-main-gap, 4rem))/2);

	/* Theme */
	--color-primary: #07233b;
	--color-primary-light: #082844;
	--color-secondary: #ffffff;
	--color-secondary-transparent: hsla(0, 0%, 100%, 0.65);
	--color-tertiary: #e75a0d;
	--color-tertiary-light:  hsla(21, 89%, 70%);
}

/* Layout */
html {
	/* Disables horizontal scrolling. Needed as a hardfix to scrolling caused by animations. */
	max-width: 100%;
	overflow-x: hidden;
}

.l-main-content {
	max-width: var(--main-content-width);
	margin: 0 auto 0 var(--main-content-offset-from-left);
}

.l-sidebar {
	position: fixed;
	/* Calculate offset from the left with respect to offset from left of main content. */
	left: calc(var(--main-content-offset-from-left, 60%)
		- var(--sidebar-width, 350px)
		- var(--sidebar-main-gap, 3em));
	width: var(--sidebar-width, 350px);
	height: 100vh;
}

.l-flex-row {
	display: flex;
}

.l-flex-column {
	display: flex;
	flex-direction: column;
	justify-content: space-between;
}

.l-flex-row.l-flex-two-column {
	flex-wrap: wrap;
	gap: 16px;
}

.l-flex-row.l-flex-two-column > * {
	width: 49%;
}

.l-flex-two-column > *:nth-child(2n) {
	position: relative;
	top: 3rem;
}

.l-vertical-margin {
	margin: 2.5em 0;
}

.l-vertical-padding {
	padding: 4em 0;
}

.l-margin-top {
	margin-top: 1em;
}

.l-margin-top-low {
	margin-top: 4em;
}

.l-margin-bottom-high {
	margin-bottom: 4em;
}

.l-margin-bottom-high {
	margin-bottom: 7em;
}

.l-float-left {
	float: left;
	padding-right: 1em;
}

.l-float-right {
	float: right;
	padding-left: 1em;
}

.l-aspect-ratio {
	display: block;
	height: auto;
}

/* Modules */
.sidebar {
	padding: 3em 2em;
}

nav li {
	font-size: 1.5rem;
	letter-spacing: 0.3em;
}

nav li + li {
	margin-top: 1.5em;
}

nav a {
	color: var(--color-tertiary);
	transition: color 0.5s;
}

nav a:hover {
	color: var(--color-tertiary-light);
}

.logo {
	letter-spacing: 0.3em;
	line-height: 1.25;
	font-size: 2.2em;
	text-align: center;
	margin-bottom: 2rem;
}

.profile-img {
	display: block;
	height: auto;
	margin: 0 auto;
	width: 175px;
	border-radius: 50%;
	filter: grayscale(100%);
}

main section {
	--section-header-padding-top: 7em;
	--section-content-verticle-offset: calc(-13rem + var(--section-header-padding-top));
}


main .section-header {
	padding-top: var(--section-header-padding-top);
	box-shadow: inset 0 0 0 1000px rgba(0,0,0,.6);
}

main .section-content {
	position: relative;
	top: var(--section-content-verticle-offset);
}

main h2 {
	letter-spacing: 0.3em;
}

.section-header p {
	color: hsl(0, 0%, 85%);
	padding-left: 2em;
	font-size: 1.5rem;
	margin-bottom: 2rem;
}

.services-table p {
	color: var(--color-secondary-transparent);
}

.about-details {
	padding-top: 4rem;
}

	.about-details img {
		position: absolute;
		top: 50%;
		right: 1rem;
		transform: translateY(-50%);
		width: 200px;
		filter: grayscale(100%);
	}

	.about-details .background {
		position: absolute;
		right: 3rem;
		width: 70%;
		height: 100%;
	}

	.about-details p {
		margin: 2rem 0 6rem 0;
		text-align: justify;
	}

.icon-card {
	--icon-card-padding-vertical: 3rem;
	--icon-card-padding-left: 10rem;

	position: relative;
	padding:
	var(--icon-card-padding-vertical, 0)
	3rem
	var(--icon-card-padding-vertical, 0)
	var(--icon-card-padding-left, 0);
}

	.icon-card h3 {
		margin-top: 0.75em;
	}

	.icon-card .fa-stack { /* Consider creating separate class instead of span. */
		position: absolute;
		left: calc(var(--icon-card-padding-left)/2.5);
	}

.client-card {
	padding: 2rem 3rem 2rem 3rem;
	display: flex;
	gap: 1rem;
}

	.client-card img {
		max-width: 150px;
	}

	.client-card ul {
		list-style-type: square;
		padding-left: 10%;
		font-size: 1rem;
		color: var(--color-tertiary);
	}

	.client-card span {
		color: var(--color-primary);
	}

.socials-bar {
	display: flex;
	flex-direction: row;
	justify-content: space-around;
	font-size: 3em;
}

.contact-form {
	padding: 2em 3em;
}

	.contact-form .l-flex-row {
		gap: 8rem;
	}

		.contact-form .l-flex-row > * {
			flex: 1;
		}

input[type=text], textarea {
	font-size: 1rem;
	margin-top: 1em;
	margin-bottom: 2em;
	padding: 1em;
	border-radius: 4px;
	width: 100%;
	border: none;
	box-shadow: inset 0 2px 4px 0 hsla(0, 0%, 0%, 0.5);
	resize: none;
}

input[type=submit] {
	padding: 0.8rem 1rem;
	background-color: var(--color-tertiary);
	color: var(--color-secondary);
	border-radius: 4px;
	border: none;
	cursor: pointer;
}


label {
	font-size: 0.8em;
	letter-spacing: 0.3em;
}

/* Themes */
.bg-color-primary {
	background-color: var(--color-primary);
}

.bg-color-primary-light {
	background-color: var(--color-primary-light);
}

.bg-color-tertiary {
	background-color: var(--color-secondary);
}

.font-color-primary {
	color: var(--color-secondary);
}

.font-color-secondary {
	color: var(--color-primary);
}

.font-color-secondary-transparent {
	color: var(--color-secondary-transparent);
}

.font-color-tertiary {
	color: var(--color-tertiary);
}

.box-shadow {
	box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.3),0 2px 10px 0 rgba(0,0,0,0.2);
}

.border-radius {
	border-radius: 10px;
}

.border-top {
	border-top: var(--color-tertiary) solid 4px;
}

.fa-circle {
	color: var(--color-tertiary);
}

.parallax {
	background-image: url("images/parallax.jpg");
	min-height: 400px;
	background-attachment: fixed;
	background-position: center;
	background-repeat: no-repeat;
	background-size: cover;
}

.is-active {
	color: var(--color-tertiary-light);
}

@media (prefers-reduced-motion: no-preference) {
	.animation-fade-in {
		animation-name: fade-in;
		animation-duration: 2s;
		animation-iteration-count: 1;
	}

	.animation-slide-from-left {
		animation-name: slide-from-left;
		animation-duration: 2s;
		animation-iteration-count: 1;
	}

	.animation-slide-from-right {
		animation-name: slide-from-right;
		animation-duration: 2s;
		animation-iteration-count: 1;
	}

	.animation-slide-from-bottom {
		animation-name: slide-from-bottom;
		animation-duration: 2s;
		animation-iteration-count: 1;
	}
}

@keyframes fade-in {
	from {
		opacity: 0;
	}

	to {
		opacity: 1;
	}
}

@keyframes slide-from-left {
	from {
		transform: translateX(-25%);
		opacity: 0;
	}

	to {
		transform: translateX(0);
		opacity: 1;
	}
}

@keyframes slide-from-right {
	from {
		transform: translateX(25%);
		opacity: 0;
	}

	to {
		transform: translateX(0);
		opacity: 1;
	}
}

@keyframes slide-from-bottom {
	from {
		transform: translateY(25%);
		opacity: 0;
	}

	to {
		transform: translateY(0);
		opacity: 1;
	}
}